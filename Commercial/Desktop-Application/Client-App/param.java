package caisse;

import java.awt.Color;
import java.awt.Container;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Interface graphique qui gère les paramètres de la caisse
 *
 * 
 * 
 */
public class param extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Properties settings;
    private Properties settingsOLD;
    private boolean booleanSettings = true;
    private String cheminListe = "aucune";
    private String cheminTickets = "aucun";



    /** Constructeur de la fenàªtre. */
    public param() {
        initComponents();
        // Chargement du fichier de configuration
        settingsOLD = new Properties();
        File cheminSettingsOLD = new File(System.getProperty("user.dir") + "/settings.txt");
        try
	{
            settingsOLD.load(new FileInputStream(cheminSettingsOLD));
	}
        catch(IOException e)
        {
            champNumTicket.setText("1");
            booleanSettings = false;
        }
        if(booleanSettings)
        {
            champNomMagasin.setText(settingsOLD.getProperty("nomMagasin"));
            champNomCaisse.setText(settingsOLD.getProperty("nomCaisse"));
            champNumTicket.setText(settingsOLD.getProperty("numTicket"));
            tickNomMagasin.setSelected(Boolean.valueOf(settingsOLD.getProperty("tickNomMagasin")).booleanValue());
            tickNomCaisse.setSelected(Boolean.valueOf(settingsOLD.getProperty("tickNomCaisse")).booleanValue());
            tickListe.setSelected(Boolean.valueOf(settingsOLD.getProperty("tickListe")).booleanValue());
            tickCheminTickets.setSelected(Boolean.valueOf(settingsOLD.getProperty("tickCheminTickets")).booleanValue());
            cheminListe = settingsOLD.getProperty("cheminListe");
            cheminTickets = settingsOLD.getProperty("cheminTickets");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        labelNomMagasin = new javax.swing.JLabel();
        labelNomCaisse = new javax.swing.JLabel();
        labelNumTicket = new javax.swing.JLabel();
        labelActiverNomMagasin = new javax.swing.JLabel();
        labelActiverNomCaisse = new javax.swing.JLabel();
        labelTicketsAZero = new javax.swing.JLabel();
        labelListe = new javax.swing.JLabel();
        labelCheminTickets = new javax.swing.JLabel();
        champNomMagasin = new javax.swing.JFormattedTextField();
        champNomCaisse = new javax.swing.JFormattedTextField();
        champNumTicket = new javax.swing.JTextField();
        tickNomMagasin = new javax.swing.JCheckBox();
        tickNomCaisse = new javax.swing.JCheckBox();
        tickTicketsAZero = new javax.swing.JCheckBox();
        tickListe = new javax.swing.JCheckBox();
        boutonListe = new javax.swing.JButton();
        tickCheminTickets = new javax.swing.JCheckBox();
        boutonCheminTickets = new javax.swing.JButton();
        boutonFermer = new javax.swing.JButton();
        boutonEnregistrer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Paramètres de la caisse");
        setResizable(false);
        Container contentPane=this.getContentPane();
        contentPane.setBackground(new Color(198,156,109));

        labelNomMagasin.setText("Nom du magasin (26 caractères) :");

        labelNomCaisse.setText("Hôte de caisse (12 caractères) :");

        labelNumTicket.setText("Numéro du prochain ticket :");

        labelActiverNomMagasin.setText("Afficher le nom du magasin :");

        labelActiverNomCaisse.setText("Afficher le nom de l'hôte de caisse :");

        labelTicketsAZero.setText("Remettre le compteur de tickets à  zéro :");

        labelListe.setText("Liste à  charger par défaut :");

        labelCheminTickets.setText("<html>Dossier par défaut pour<br>l'enregistrement des tickets :</html>");

        try {
            champNomMagasin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**************************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            champNomCaisse.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        champNumTicket.setEditable(false);

        tickNomMagasin.setText("Activer");
        tickNomMagasin.setOpaque(false);

        tickNomCaisse.setText("Activer");
        tickNomCaisse.setOpaque(false);

        tickTicketsAZero.setText("Activer");
        tickTicketsAZero.setOpaque(false);

        tickListe.setText("Activer");
        tickListe.setOpaque(false);

        boutonListe.setText("Choisir");
        boutonListe.setBorderPainted(false);
		boutonListe.setFocusPainted(false);
		boutonListe.setBackground(new Color(44, 62, 80));
		boutonListe.setForeground(new Color(208, 208, 208));
        boutonListe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonListeActionPerformed(evt);
            }
        });

        tickCheminTickets.setText("Activer");
        tickCheminTickets.setOpaque(false);

        boutonCheminTickets.setText("Choisir");
        boutonCheminTickets.setBorderPainted(false);
		boutonCheminTickets.setFocusPainted(false);
		boutonCheminTickets.setBackground(new Color(44, 62, 80));
		boutonCheminTickets.setForeground(new Color(208, 208, 208));
        boutonCheminTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCheminTicketsActionPerformed(evt);
            }
        });

        boutonFermer.setText("Fermer sans enregistrer");
        boutonFermer.setBorderPainted(false);
		boutonFermer.setFocusPainted(false);
		boutonFermer.setBackground(new Color(44, 62, 80));
		boutonFermer.setForeground(new Color(208, 208, 208));
        boutonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonFermerActionPerformed(evt);
            }
        });

        boutonEnregistrer.setText("Enregistrer");
        boutonEnregistrer.setBorderPainted(false);
		boutonEnregistrer.setFocusPainted(false);
		boutonEnregistrer.setBackground(new Color(44, 62, 80));
		boutonEnregistrer.setForeground(new Color(208, 208, 208));
        boutonEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonEnregistrerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelActiverNomCaisse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(tickNomCaisse))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNomCaisse)
                            .addComponent(labelNomMagasin)
                            .addComponent(labelNumTicket))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(champNumTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(champNomMagasin, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(champNomCaisse, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelCheminTickets)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(tickCheminTickets)
                        .addGap(18, 18, 18)
                        .addComponent(boutonCheminTickets))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelListe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(tickListe)
                        .addGap(18, 18, 18)
                        .addComponent(boutonListe))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelActiverNomMagasin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(tickNomMagasin))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelTicketsAZero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(tickTicketsAZero))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boutonFermer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(boutonEnregistrer)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomMagasin)
                    .addComponent(champNomMagasin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomCaisse)
                    .addComponent(champNomCaisse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNumTicket)
                    .addComponent(champNumTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelActiverNomMagasin)
                    .addComponent(tickNomMagasin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelActiverNomCaisse)
                    .addComponent(tickNomCaisse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tickTicketsAZero)
                    .addComponent(labelTicketsAZero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boutonListe)
                    .addComponent(labelListe)
                    .addComponent(tickListe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boutonCheminTickets)
                        .addComponent(tickCheminTickets))
                    .addComponent(labelCheminTickets))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boutonFermer)
                    .addComponent(boutonEnregistrer))
                .addContainerGap())
        );

        pack();
        setIconImage(new ImageIcon("logo.png").getImage());
		setTitle("Moneo Resto USTHB");
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents
/**
 * Méthode qui gère l'action du bouton Fermer.
 * Elle ferme la fenàªtre.
 * @param evt
 */
    private void boutonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_boutonFermerActionPerformed
/**
 * Méthode qui gère l'action du bouton Enregistrer.
 * Elle enregistre les paramètres dans un fichier nommé "settings.txt" dans le màªme répertoire que la caisse.
 * Elle vérifie si les champs requis ont été remplis.
 * @param evt
 */
    private void boutonEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonEnregistrerActionPerformed
        if(tickNomMagasin.isSelected() && champNomMagasin.getText().equals("                          "))
        {
            JOptionPane.showMessageDialog(null, "Veuillez indiquer le nom du magasin !", "Attention !", JOptionPane.WARNING_MESSAGE);
        }
        else if(tickNomCaisse.isSelected() && champNomCaisse.getText().equals("            "))
        {
            JOptionPane.showMessageDialog(null, "Veuillez indiquer le nom de l'hôte de caisse !", "Attention !", JOptionPane.WARNING_MESSAGE);
        }
        else if(tickListe.isSelected() && cheminListe.equals("aucune"))
        {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une liste !", "Attention !", JOptionPane.WARNING_MESSAGE);
        }
        else if(tickCheminTickets.isSelected() && cheminTickets.equals("aucun"))
        {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un dossier pour l'enregistrement des tickets !", "Attention !", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            settings = new Properties();
            File cheminSettings = new File(System.getProperty("user.dir") + "/settings.txt");
            settings.setProperty("nomMagasin", champNomMagasin.getText());
            settings.setProperty("nomCaisse", champNomCaisse.getText());
            if(tickTicketsAZero.isSelected())
            {
                champNumTicket.setText("1");
            }
            settings.setProperty("tickNomMagasin", ""+tickNomMagasin.isSelected());
            settings.setProperty("tickNomCaisse", ""+tickNomCaisse.isSelected());
            settings.setProperty("numTicket", champNumTicket.getText());
            settings.setProperty("tickListe", ""+tickListe.isSelected());
            settings.setProperty("tickCheminTickets", ""+tickCheminTickets.isSelected());
            settings.setProperty("cheminListe", cheminListe);
            settings.setProperty("cheminTickets", cheminTickets);
            try
            {
                settings.store(new FileOutputStream(cheminSettings), "Paramètres de la caisse");
            }
            catch(IOException e)
            {
                JOptionPane.showMessageDialog(null, "Erreur lors de l'enregistrement des paramètres !", "Erreur !", JOptionPane.ERROR_MESSAGE);
            }
            dispose();
        }

    }//GEN-LAST:event_boutonEnregistrerActionPerformed
/**
 * Méthode qui gère l'action du bouton Choisir (pour la liste par défaut).
 * @param evt
 */
    private void boutonListeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonListeActionPerformed
        chargerListe();
    }//GEN-LAST:event_boutonListeActionPerformed
/**
 * Méthode qui gère l'action du bouton Choisir (pour le dossier par défaut).
 * @param evt
 */
    private void boutonCheminTicketsActionPerformed(java.awt.event.ActionEvent evt) {
        chargerCheminTickets();
    }

   

    /**
     * Méthode qui ouvre un gestionnaire de fichier et renvoie l'emplacement du fichier sélectionné.
     * Elle met à  jour le String cheminListe avec le fichier .liste sélectionné.
     * Si erreur, cheminListe = null.
     */
    private void chargerListe()
    {
	filtreFichier extension = new filtreFichier("Liste d'articles",".liste");
	JFileChooser cheminFichier = new JFileChooser();
	cheminFichier.addChoosableFileFilter(extension);
	int retour = cheminFichier.showOpenDialog(null);
	if(retour == JFileChooser.APPROVE_OPTION)
	{
		cheminListe = cheminFichier.getSelectedFile().getAbsolutePath();
	}
	else
	{
		JOptionPane.showMessageDialog(null, "Veuillez sélectionner un fichier .liste !", "Erreur !", JOptionPane.ERROR_MESSAGE);
	}
    }

    /**
     * Méthode qui ouvre un gestionnaire de fichier et renvoie l'emplacement du dossier sélectionné.
     * Elle met à  jour le String cheminTickets avec le dossier sélectionné.
     * Si erreur, cheminTickets = null.
     */
    private void chargerCheminTickets()
    {
        JFileChooser cheminFichier = new JFileChooser();
        cheminFichier.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int retour = cheminFichier.showSaveDialog(null);
        if(retour == JFileChooser.APPROVE_OPTION)
        {
            cheminTickets = cheminFichier.getSelectedFile().getAbsolutePath();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un dossier pour l'impression du ticket !", "Erreur !", JOptionPane.ERROR_MESSAGE);
        }
    }

    private javax.swing.JButton boutonCheminTickets;
    private javax.swing.JButton boutonEnregistrer;
    private javax.swing.JButton boutonFermer;
    private javax.swing.JButton boutonListe;
    private javax.swing.JFormattedTextField champNomCaisse;
    private javax.swing.JFormattedTextField champNomMagasin;
    private javax.swing.JTextField champNumTicket;
    private javax.swing.JLabel labelActiverNomCaisse;
    private javax.swing.JLabel labelActiverNomMagasin;
    private javax.swing.JLabel labelCheminTickets;
    private javax.swing.JLabel labelListe;
    private javax.swing.JLabel labelNomCaisse;
    private javax.swing.JLabel labelNomMagasin;
    private javax.swing.JLabel labelNumTicket;
    private javax.swing.JLabel labelTicketsAZero;
    private javax.swing.JCheckBox tickCheminTickets;
    private javax.swing.JCheckBox tickListe;
    private javax.swing.JCheckBox tickNomCaisse;
    private javax.swing.JCheckBox tickNomMagasin;
    private javax.swing.JCheckBox tickTicketsAZero;

}
